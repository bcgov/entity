{
	"info": {
		"_postman_id": "43bbaa07-62fd-44b1-8e92-077a9b929850",
		"name": "colin-verify-incorp",
		"description": "version=0.108 - This is a Colin API description",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "verify-incorporation",
			"item": [
				{
					"name": "authentication setup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ea5be1f-40c1-4641-8702-8a547201f488",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token\", jsonData.access_token);",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"",
									"pm.environment.set(\"token_expires\", Date.now()+(jsonData.expires_in * 1000));",
									"pm.environment.set(\"refresh_token_expires\", Date.now()+(jsonData.refresh_expires_in * 1000));",
									"pm.environment.set(\"auth_url\", 'https://auth-api-{{env}}.pathfinder.gov.bc.ca/api/v1');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "grant_type=client_credentials",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://sso-{{env}}.pathfinder.gov.bc.ca/auth/realms/{{realm}}/protocol/openid-connect/token",
							"protocol": "https",
							"host": [
								"sso-{{env}}",
								"pathfinder",
								"gov",
								"bc",
								"ca"
							],
							"path": [
								"auth",
								"realms",
								"{{realm}}",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET identifier",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6577968b-90e4-447e-a9db-4a98bfdb8c9e",
								"exec": [
									"pm.environment.set(\"businessIdentifier\", null);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4b723443-7617-418c-b2ab-2ecdbf451337",
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should be okay to process\", function () { ",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json;",
									"});",
									"pm.test(\"Verify that the account has a BC entity affiliation\",  () => {",
									"    var responseData = pm.response.json();",
									"    pm.expect(responseData).to.have.property('entities');",
									"",
									"    var entities = responseData['entities'];",
									"    if(entities.length !== 29) {",
									"        postman.setNextRequest(null);",
									"        throw new Error(`Incorrect number of affiliations : ` + entities.length)",
									"    }",
									"    ",
									"    var identifier=''",
									"    _.each(entities, (arrItem) => {",
									"        if (arrItem.corpType.code === 'BC') {",
									"            identifier=arrItem.businessIdentifier",
									"            pm.environment.set(\"businessIdentifier\", arrItem.businessIdentifier.substring(2));",
									"        }",
									"    })",
									"    ",
									"    if (identifier === '') {",
									"        // Will not execute further requests in the collection if no identifier",
									"        postman.setNextRequest(null);",
									"        throw new Error(`The account does not have an affiliated Benefit Company`)",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{auth_url}}/orgs/{{test_account_number}}/affiliations",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"orgs",
								"{{test_account_number}}",
								"affiliations"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Business",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f4cec1f-657c-4d3b-955e-6e77d883a0cb",
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('should return JSON', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/businesses/BC/{{businessIdentifier}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"BC",
								"{{businessIdentifier}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Office",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5aafa954-4748-44e3-8ded-eb2578c84ecc",
								"exec": [
									"var jsonData = pm.response.json()",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('should return JSON', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});",
									"",
									"pm.test(\"Returns the required fields for registered office\", () => {",
									"    pm.expect(jsonData.registeredOffice).to.exist",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/businesses/BC/{{businessIdentifier}}/office",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"BC",
								"{{businessIdentifier}}",
								"office"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Parties",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf4ec4e4-e8b8-4480-b447-fe1897a97132",
								"exec": [
									"var jsonData = pm.response.json()",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('should return JSON', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});",
									"",
									"pm.test(\"Returns the required fields directors\", () => {",
									"    pm.expect(jsonData.directors).to.exist",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/businesses/BC/{{businessIdentifier}}/parties?partyType=Director",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"BC",
								"{{businessIdentifier}}",
								"parties"
							],
							"query": [
								{
									"key": "partyType",
									"value": "Director"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Business Name NB",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "593af24a-2e3a-4573-9c82-3a39592b0ef3",
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('should return JSON', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});",
									"",
									"pm.test(\"Returns name objects containing name\", () => {",
									"    var jsonData = pm.response.json()",
									"    pm.expect(jsonData.names).to.exist",
									"    for (var i=0; i<jsonData.names.length; i++) {",
									"        pm.expect(jsonData.names[i].legalName).to.exist",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/businesses/BC/{{businessIdentifier}}/names/NB",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"BC",
								"{{businessIdentifier}}",
								"names",
								"NB"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Business Name CO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3af018a-31b9-4957-b576-8494d43eb3a3",
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Returns name objects containing name\", () => {",
									"    var jsonData = pm.response.json()",
									"    pm.expect(jsonData.names).to.exist",
									"    for (var i=0; i<jsonData.names.length; i++) {",
									"        pm.expect(jsonData.names[i].legalName).to.exist",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/businesses/BC/{{businessIdentifier}}/names/CO",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"BC",
								"{{businessIdentifier}}",
								"names",
								"CO"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Business Names TR",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95f12a4d-f2fd-448e-a7b7-9b6befcd8bed",
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('should return JSON', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});",
									"",
									"pm.test(\"Returns name objects containing name\", () => {",
									"    var jsonData = pm.response.json()",
									"    pm.expect(jsonData.names).to.exist",
									"    for (var i=0; i<jsonData.names.length; i++) {",
									"        pm.expect(jsonData.names[i].legalName).to.exist",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/businesses/BC/{{businessIdentifier}}/names/TR",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"BC",
								"{{businessIdentifier}}",
								"names",
								"TR"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Share Structure",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8720e75-996f-4e0e-bd89-da9d813aa8cc",
								"exec": [
									"var jsonData = pm.response.json()",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('should return JSON', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});",
									"",
									"pm.test(\"Returns the share structure\", () => {",
									"    pm.expect(jsonData.shareClasses).to.exist",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/businesses/BC/{{businessIdentifier}}/sharestructure",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"BC",
								"{{businessIdentifier}}",
								"sharestructure"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Resolutions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "453aabfd-6535-4d50-87cc-39ef91ffec09",
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Returns the resolution dates\", () => {",
									"    var jsonData = pm.response.json()",
									"    pm.expect(jsonData.resolutionDates).to.exist",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/businesses/BC/{{businessIdentifier}}/resolutions",
							"host": [
								"{{url}}"
							],
							"path": [
								"businesses",
								"BC",
								"{{businessIdentifier}}",
								"resolutions"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "49419f57-c57c-4def-b503-a068a4ca24d5",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "49db04d6-671e-4b6c-80c5-9d77d89a0297",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}